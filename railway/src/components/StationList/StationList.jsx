import { useState, useRef } from 'react';
import './StationList.css';

const stationTypeMap = {
  station: '—Å—Ç–∞–Ω—Ü–∏—è',
  platform: '–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞',
  stop: '–æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø—É–Ω–∫—Ç',
  checkpoint: '–±–ª–æ–∫-–ø–æ—Å—Ç',
  post: '–ø–æ—Å—Ç',
  crossing: '—Ä–∞–∑—ä–µ–∑–¥',
  overtaking_point: '–æ–±–≥–æ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç',
  train_station: '–≤–æ–∫–∑–∞–ª',
  airport: '–∞—ç—Ä–æ–ø–æ—Ä—Ç',
  bus_station: '–∞–≤—Ç–æ–≤–æ–∫–∑–∞–ª',
  bus_stop: '–∞–≤—Ç–æ–±—É—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞',
  unknown: '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
  port: '–ø–æ—Ä—Ç',
  port_point: '–ø—É–Ω–∫—Ç –ø–æ—Ä—Ç–∞',
  wharf: '–ø—Ä–∏—Å—Ç–∞–Ω—å',
  river_port: '—Ä–µ—á–Ω–æ–π –≤–æ–∫–∑–∞–ª',
  marine_station: '–º–æ—Ä—Å–∫–æ–π –≤–æ–∫–∑–∞–ª',
};

function StationList({ stations, onStationClick }) {
  const [currentPage, setCurrentPage] = useState(1);
  const pageSize = 5; 
  const scrollRef = useRef(null);


  const totalPages = Math.ceil(stations.length / pageSize);
  const startIndex = (currentPage - 1) * pageSize;
  const currentStations = stations.slice(startIndex, startIndex + pageSize);

  const handlePrev = () => currentPage > 1 && setCurrentPage(currentPage - 1);
  const handleNext = () => currentPage < totalPages && setCurrentPage(currentPage + 1);

  return (
    <>
      
      <div className="station-list">
      <h3>–°–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω—Ü–∏–π</h3>
        <table>
          <thead>
            <tr>
              <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
              <th>–¢–∏–ø —Å—Ç–∞–Ω—Ü–∏–∏</th>
              <th>–û–±–ª–∞—Å—Ç—å</th>
              <th></th>
            </tr>
          </thead>
        </table>

        <div className="scrollable-table-body" ref={scrollRef}>
          <table>
            <tbody>
              {currentStations.map((s, i) => (
                <tr key={i}>
                  <td>{s.title}</td>
                  <td>{stationTypeMap[s.station_type] || s.station_type}</td>
                  <td>{s.region}</td>
                  <td>
                    <button className="icon-button" onClick={() => onStationClick(s)} title="–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ">
                      üìÖ
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>

        {stations.length > pageSize && (
          <div className="pagination">
            <button onClick={handlePrev} disabled={currentPage === 1}>–ù–∞–∑–∞–¥</button>
            <span>–°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentPage} –∏–∑ {totalPages}</span>
            <button onClick={handleNext} disabled={currentPage === totalPages}>–í–ø–µ—Ä—ë–¥</button>
          </div>
        )}
      </div>
    </>
  );
}

export default StationList;
